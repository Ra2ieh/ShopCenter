// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShopCenter.Infrastructure;

#nullable disable

namespace ShopCenter.Infrastructure.Migrations
{
    [DbContext(typeof(ShopCenterDbContext))]
    [Migration("20230827092712_alter-delay-report-table")]
    partial class alterdelayreporttable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ShopCenter.Domain.Entities.DelayQueue", b =>
                {
                    b.Property<int>("DelayQueueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DelayQueueId"));

                    b.Property<int?>("AgentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InsertTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsProgressed")
                        .HasColumnType("bit");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("DelayQueueId");

                    b.HasIndex("AgentId");

                    b.HasIndex("OrderId");

                    b.ToTable("DelayQueue");
                });

            modelBuilder.Entity("ShopCenter.Domain.Models.Agent", b =>
                {
                    b.Property<int>("AgentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AgentId"));

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AgentId");

                    b.ToTable("Agent");
                });

            modelBuilder.Entity("ShopCenter.Domain.Models.Consumer", b =>
                {
                    b.Property<int>("ConsumerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConsumerId"));

                    b.Property<string>("ConsumerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ConsumerId");

                    b.ToTable("Consumer");
                });

            modelBuilder.Entity("ShopCenter.Domain.Models.DelayReport", b =>
                {
                    b.Property<int>("DelayReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DelayReportId"));

                    b.Property<int>("NewDeliveryTime")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReportedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("DelayReportId");

                    b.HasIndex("OrderId");

                    b.ToTable("Delay_Reports");
                });

            modelBuilder.Entity("ShopCenter.Domain.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int>("ConsumerId")
                        .HasColumnType("int");

                    b.Property<int>("DeliveryTime")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("ConsumerId");

                    b.HasIndex("VendorId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("ShopCenter.Domain.Models.Trip", b =>
                {
                    b.Property<int>("TripId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TripId"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("TripStatusId")
                        .HasColumnType("int");

                    b.HasKey("TripId");

                    b.HasIndex("OrderId");

                    b.HasIndex("TripStatusId");

                    b.ToTable("Trip");
                });

            modelBuilder.Entity("ShopCenter.Domain.Models.TripStatus", b =>
                {
                    b.Property<int>("TripStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TripStatusId"));

                    b.Property<string>("TripStatusTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TripStatusId");

                    b.ToTable("TripStatus");

                    b.HasData(
                        new
                        {
                            TripStatusId = 1,
                            TripStatusTitle = "ASSIGNED"
                        },
                        new
                        {
                            TripStatusId = 2,
                            TripStatusTitle = "AT_VENDOR"
                        },
                        new
                        {
                            TripStatusId = 3,
                            TripStatusTitle = "PICKED"
                        },
                        new
                        {
                            TripStatusId = 4,
                            TripStatusTitle = "DELIVERED"
                        });
                });

            modelBuilder.Entity("ShopCenter.Domain.Models.Vendor", b =>
                {
                    b.Property<int>("VendorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VendorId"));

                    b.Property<DateTime>("ContractDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VendorName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VendorId");

                    b.ToTable("Vendor");
                });

            modelBuilder.Entity("ShopCenter.Domain.Entities.DelayQueue", b =>
                {
                    b.HasOne("ShopCenter.Domain.Models.Agent", "Agent")
                        .WithMany()
                        .HasForeignKey("AgentId");

                    b.HasOne("ShopCenter.Domain.Models.Order", "Order")
                        .WithMany("DelayQueues")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agent");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("ShopCenter.Domain.Models.DelayReport", b =>
                {
                    b.HasOne("ShopCenter.Domain.Models.Order", "Order")
                        .WithMany("DelayReports")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("ShopCenter.Domain.Models.Order", b =>
                {
                    b.HasOne("ShopCenter.Domain.Models.Consumer", "Consumer")
                        .WithMany("Orders")
                        .HasForeignKey("ConsumerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopCenter.Domain.Models.Vendor", "Vendor")
                        .WithMany("Orders")
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Consumer");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("ShopCenter.Domain.Models.Trip", b =>
                {
                    b.HasOne("ShopCenter.Domain.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShopCenter.Domain.Models.TripStatus", "TripStatus")
                        .WithMany()
                        .HasForeignKey("TripStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("TripStatus");
                });

            modelBuilder.Entity("ShopCenter.Domain.Models.Consumer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("ShopCenter.Domain.Models.Order", b =>
                {
                    b.Navigation("DelayQueues");

                    b.Navigation("DelayReports");
                });

            modelBuilder.Entity("ShopCenter.Domain.Models.Vendor", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
